//
// Generated file, do not edit! Created by nedtool 4.6 from src/Base/Messages/icancloud_MPI_Message.msg.
//

#ifndef _ICANCLOUD_MPI_MESSAGE_M_H_
#define _ICANCLOUD_MPI_MESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "icancloud_App_NET_Message.h"
			
// }}

/**
 * Class generated from <tt>src/Base/Messages/icancloud_MPI_Message.msg:15</tt> by nedtool.
 * <pre>
 * ///
 * /// icancloud Message for MPI calls
 * ///
 * message icancloud_MPI_Message extends icancloud_App_NET_Message
 * {
 *     @customize(true);
 * 
 *     unsigned int sourceRank = 0;	// Rank of the source process
 *     unsigned int destRank = 0;		// Rank of the destination process
 *     string fileName = "";			// File name
 *     int offset = 0;					// Offset				
 * }
 * </pre>
 *
 * icancloud_MPI_Message_Base is only useful if it gets subclassed, and icancloud_MPI_Message is derived from it.
 * The minimum code to be written for icancloud_MPI_Message is the following:
 *
 * <pre>
 * class icancloud_MPI_Message : public icancloud_MPI_Message_Base
 * {
 *   private:
 *     void copy(const icancloud_MPI_Message& other) { ... }

 *   public:
 *     icancloud_MPI_Message(const char *name=NULL, int kind=0) : icancloud_MPI_Message_Base(name,kind) {}
 *     icancloud_MPI_Message(const icancloud_MPI_Message& other) : icancloud_MPI_Message_Base(other) {copy(other);}
 *     icancloud_MPI_Message& operator=(const icancloud_MPI_Message& other) {if (this==&other) return *this; icancloud_MPI_Message_Base::operator=(other); copy(other); return *this;}
 *     virtual icancloud_MPI_Message *dup() const {return new icancloud_MPI_Message(*this);}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from icancloud_MPI_Message_Base
 * };
 * </pre>
 *
 * The following should go into a .cc (.cpp) file:
 *
 * <pre>
 * Register_Class(icancloud_MPI_Message);
 * </pre>
 */
class icancloud_MPI_Message_Base : public ::icancloud_App_NET_Message
{
  protected:
    unsigned int sourceRank_var;
    unsigned int destRank_var;
    opp_string fileName_var;
    int offset_var;

  private:
    void copy(const icancloud_MPI_Message_Base& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const icancloud_MPI_Message_Base&);
    // make constructors protected to avoid instantiation
    icancloud_MPI_Message_Base(const char *name=NULL, int kind=0);
    icancloud_MPI_Message_Base(const icancloud_MPI_Message_Base& other);
    // make assignment operator protected to force the user override it
    icancloud_MPI_Message_Base& operator=(const icancloud_MPI_Message_Base& other);

  public:
    virtual ~icancloud_MPI_Message_Base();
    virtual icancloud_MPI_Message_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class icancloud_MPI_Message");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getSourceRank() const;
    virtual void setSourceRank(unsigned int sourceRank);
    virtual unsigned int getDestRank() const;
    virtual void setDestRank(unsigned int destRank);
    virtual const char * getFileName() const;
    virtual void setFileName(const char * fileName);
    virtual int getOffset() const;
    virtual void setOffset(int offset);
};


#endif // ifndef _ICANCLOUD_MPI_MESSAGE_M_H_

